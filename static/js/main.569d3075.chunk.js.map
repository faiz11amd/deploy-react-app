{"version":3,"sources":["components/Heading.js","components/UnsplashImage.js","components/Loader.js","App.js","serviceWorker.js","index.js"],"names":["Heading","props","className","href","aria-hidden","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","width","src","alt","placeholder","onClick","onTabChange","Img","styled","img","UnsplashImage","url","key","Loading","div","Loader","GlobalStyle","createGlobalStyle","WrapperImages","section","App","useState","images","setImage","prevTab","selectedTab","useEffect","fetchImages","count","apiRoot","accessKey","process","axios","get","then","res","data","console","log","dataLength","length","next","hasMore","loader","map","image","urls","thumb","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.569d3075.chunk.js","sourcesContent":["import React from 'react';\nimport './Heading.css';\n\n\n// function onTabChange ( pro ) {\n  // console.log(val + \" : val in Heading\")\n  // this.props.onTabChange(val);\n  // props.onTabChange(val); \n// }\n\n\nexport const Heading = (props) => {\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-navi px-5\">\n        <div className=\"container-fluid bg-light\">\n          <a className=\"navbar-brand font-weight-bold text-dark\" href=\"index.html\">\n            <i className=\"fa fa-camera\" aria-hidden=\"true\"></i>\n          </a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse text-center pt-3\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ml-lg-auto\">\n              <li className=\"nav-item mb-3 active\">\n                <a className=\"nav-link\" href=\"/\">HOME\n                                    <span className=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li className=\"nav-item mb-lg-0 mb-3 ml-3\">\n                <a className=\"nav-link\" href=\"/\">COLLECTION</a>\n              </li>\n              <li className=\"nav-item mb-lg-0 mb-4 ml-3\">\n                <a className=\"nav-link\" href=\"/\">EXPLORE</a>\n              </li>\n              <li className=\"nav-item mb-lg-0 mb-4 ml-3\">\n                <a className=\"nav-link\" href=\"/\">...</a>\n              </li>\n              <li className=\"ml-lg-4 mb-lg-0 mb-4 ml-3\">\n                <button className=\"btn btn-outline-dark\">Submit a photo</button>\n              </li>\n              <li className=\"ml-lg-4 mb-lg-0 mb-4 ml-3\"><i className=\"fa fa-bell-o pt-2\"></i></li>\n              <li className=\"ml-lg-4 mb-lg-0 mb-4 ml-3\">\n                <img className=\"profile-photo\" width=\"100px\" src=\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?cs=srgb&dl=pexels-pixabay-220453.jpg&fm=jpg\" alt=\"\" />\n              </li>\n\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className=\"body px-5\">\n        <div className=\"body-card border text-left py-5\">\n          <h2 className=\"px-5 text-white\">Unsplash</h2>\n          <p className=\"px-5 text-white\">Beautiful, free photos.</p>\n          <p className=\"px-5 text-white\">Gifted bt the worker's most generous community of photographers.<i className=\"fa fa-gift ml-3\"></i></p>\n          <div className=\"d-flex px-5\">\n            <i className=\"fa fa-search pt-2 search-icon\"></i>\n            <input type=\"text\" placeholder=\"Search free high-resolution photos\" className=\"form-control pl-5\" />\n            <button className=\"btn btn-outline-dark search-btn\">Search</button>\n          </div>\n          <p className=\"px-5 pt-3 text-white\">Trending searches bussiness comouter, nature, love, house</p>\n        </div>\n        <div className=\"container-fluid px-0 border\">\n          <div className=\"bg-white p-4\">\n            <div className=\"d-flex justify-content-between\">\n              <div className=\"d-flex\">\n                <p onClick={() => props.onTabChange('139386')}>Trending</p>\n                <p onClick={() => props.onTabChange('1580860')} className=\"ml-4\">New</p>\n                <p onClick={() => props.onTabChange('139386')} className=\"ml-4\">Following</p>\n              </div>\n              <div className=\"d-flex\">\n                <p><i className=\"fa fa-th-list\"></i></p>\n                <p className=\"ml-4\"><i className=\"fa fa-th-large\"></i></p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const UnsplashImage = ({ url, key }) => {\n  return (\n    <div>\n      <Img src={url} key={key} alt=\"\" />\n    </div>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Loading = styled.div`\n\ntext-align: center;\n.lds-ellipsis {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-ellipsis div {\n  position: absolute;\n  top: 33px;\n  width: 13px;\n  height: 13px;\n  border-radius: 50%;\n  background: #222;\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n.lds-ellipsis div:nth-child(1) {\n  left: 8px;\n  animation: lds-ellipsis1 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(2) {\n  left: 8px;\n  animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(3) {\n  left: 32px;\n  animation: lds-ellipsis2 0.6s infinite;\n}\n.lds-ellipsis div:nth-child(4) {\n  left: 56px;\n  animation: lds-ellipsis3 0.6s infinite;\n}\n@keyframes lds-ellipsis1 {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes lds-ellipsis3 {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n@keyframes lds-ellipsis2 {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(24px, 0);\n  }\n}\n`;\n\nexport const Loader = () => {\n  return (\n    <Loading>\n      <div className=\"lds-ellipsis\">\n        <div>\n        </div>\n        <div>\n        </div>\n        <div>\n        </div>\n        <div>\n        </div>\n      </div>\n    </Loading>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Heading } from './components/Heading';\nimport { UnsplashImage } from './components/UnsplashImage';\nimport { Loader } from './components/Loader';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\n// Style\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: sans-serif;\n  }\n`;\n\nconst WrapperImages = styled.section`\n  max-width: 70rem;\n  margin: 4rem auto;\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-auto-rows: 300px;\n`;\n\nfunction App() {\n  const [images, setImage] = useState([]);\n  let [prevTab, selectedTab] = useState(['1580860']);\n\n\n  useEffect(() => {\n    fetchImages();\n  }, [])\n  const fetchImages = (count = 10) => {\n    \n    const apiRoot = \"https://api.unsplash.com\";\n    const accessKey = process.env.REACT_APP_ACCESSKEY;\n\n    axios\n      .get(`${apiRoot}/collections/${prevTab}/photos?client_id=${accessKey}&count=${count}`)\n      .then(res => {\n        setImage([...images, ...res.data]);\n      })\n  }\n\n  function handleTabChange(props) {\n    console.log(props, ' : value in App');\n    selectedTab(prevTab = props);\n    console.log(prevTab, ' tab in app');\n    fetchImages();\n  }\n\n\n  return (\n    <div>\n      <Heading onTabChange={handleTabChange} />\n      <GlobalStyle />\n      <InfiniteScroll\n        dataLength={images.length}\n        next={fetchImages}\n        hasMore={true}\n        loader={<Loader />}\n      >\n        <WrapperImages>\n          {images.map(image => (\n            <UnsplashImage url={image.urls.thumb} key={image.id} />\n          ))}\n        </WrapperImages>\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}